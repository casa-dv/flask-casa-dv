scene:
    animated: true
#     background:

sources:
    osm:
        type: TopoJSON
        url:  https://vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson?api_key=vector-tiles-HqUVidw
        max_zoom: 16

cameras:
    camera1:
        # type: isometric
        # axis: [1, 1]
        type: perspective

lights:
    # blue:
    #     type: directional
    #     direction: [0, 1, 0]
    #     ambient: .3
    #     diffuse: [0,0,1.]
    #     specular: .2
    # red:
    #     type: directional
    #     direction: [0, -1, 0]
    #     ambient: .3
    #     diffuse: [1.,0,0]
    #     specular: .2
    # spot:
    #     type: point
    #     position: [0, 0, 0]
    #     origin: camera
    #     ambient: .3
    #     diffuse: 1.
    #     specular: .2
    # light1:
    #     type: point
    #     position: [1,1,2.4]
    #     ambient: [.5,0,0]
    #     diffuse: [0,1,0]
    #     specular: [0,0,1]
    # base:
    #     visible: true
    #     type: point
    #     position: [-74.0170, 40.7031, 100]
    #     origin: world
    #     ambient: .3
    #     diffuse: 1
    #     specular: .2
    sun:
        type: directional
        direction: [0, 1, -.5]
        diffuse: [1, 1, 1]
        ambient: .5
    moon:
        type: directional
        direction: [0, 1, -.5]
        diffuse: [0, 0, .5]
        ambient: .2

styles:
    roads:
        base: lines
        material:
            diffuse: 1
            emission: 1
    water:
        base: polygons
        material:
            diffuse: 1
            ambient: 1
    buildings:
        base: polygons
        material:
            diffuse: 1
            ambient: 1
            # diffuse:
            #     texture: grid.jpg
            #     mapping: uv
        shaders:
            blocks:
                # global: |
                #     float random(in vec3 _st){
                #         return fract(sin(dot(_st.xyz,
                #                              vec3(12.9898,78.233,32.4355)))*
                #             43758.5453123);
                #     }

                #     vec3 hsb2rgb( in float hue, in float sat, in float bri ){
                #         vec3 rgb = clamp(abs(mod(hue*6.0+vec3(0.0,4.0,2.0),
                #                                  6.0)-3.0)-1.0,
                #                          0.0,
                #                          1.0 );
                #         rgb = rgb*rgb*(3.0-2.0*rgb);
                #         return bri * mix(vec3(1.0), rgb, sat);
                #     }
                # normal: |
                #     vec3 pos = worldPosition().xyz*0.1;
                #     normal.xyz += vec3( cos(pos.x+u_time)+
                #                         cos(pos.x*0.5+u_time*2.0),
                #                         sin(pos.y*2.0+u_time*0.4)*0.54+
                #                         sin(pos.y*1.5+u_time*0.7),
                #                         sin(pos.z*0.7+u_time*1.5)+
                #                         cos(pos.z+u_time)*1.1 );
                #     normal = normalize(normal);
                # color: |
                #     vec3 pos = worldPosition().xyz*0.05;
                #     color.xyz *= hsb2rgb( random(abs(floor(pos))) , .5, .8 );


layers:
    earth:
        data: { source: osm }
        draw:
            polygons:
                order: function() { return feature.sort_key; }
                color: '#ddeeee'

    landuse:
        data: { source: osm }
        draw:
            polygons:
                order: function() { return feature.sort_key; }
                color: '#aaddaa'

    water:
        data: { source: osm }
        draw:
            polygons:
                style: water
                order: function() { return feature.sort_key; }
                color: '#88bbee'

    roads:
        data: { source: osm }
        filter:
            not: { kind: [path, rail, ferry] }
        draw:
            lines:
                order: function() { return feature.sort_key; }
                color: gray
                width: 8
                cap: round
        highway:
            filter:
                kind: highway
            draw:
                lines:
                    color: '#cc6666'
                    width: 12
                    outline:
                        order: 352 # magic
                        color: grey
                        width: 1.5
        minor_road:
            filter:
                kind: minor_road
            draw:
                lines:
                    color: lightgrey
                    width: 5

    buildings:
        data: { source: osm }
        draw:
            polygons:
                order: function() { return feature.sort_key; }
                color: [.5,0.5,0.6]
                # style: buildings
        3d-buildings:
            filter: { $zoom: { min: 15 } }
            draw:
                polygons:
                    # style: buildings
                    extrude: function () { return feature.height > 20 || $zoom >= 16; }